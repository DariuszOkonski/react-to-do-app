{"version":3,"sources":["components/Header.js","components/NewTask.js","components/About.js","components/Error.js","components/Tasks/TaskItem.js","components/Tasks/TaskList.js","components/Done/DoneItem.js","components/Done/DoneList.js","components/Removed/RemovedItem.js","components/Removed/RemovedList.js","components/Content.js","components/Footer.js","components/App.js","index.js"],"names":["Header","className","to","exact","minDate","Date","toISOString","substr","maxDate","getFullYear","NewTask","state","text","priority","date","handleTextChange","e","setState","target","value","handlePriorityChange","prevState","handleDataChange","handleSubmit","preventDefault","length","props","onHandleAddNewTask","alert","this","onSubmit","htmlFor","maxLength","type","name","onChange","checked","min","max","React","Component","About","Error","TaskItem","id","task","deadline","onRemove","onDone","style","color","onClick","TaskList","tasksArr","onHandleRemoveFromTasks","onHandleMoveFromTasksToDone","map","key","DoneItem","doneAt","onStore","DoneList","doneArr","onHandleStoreToRemoved","onHandleRemoveTaskFromDone","RemovedItem","RemovedList","removedArr","onHandleRemoveTaskFromRemoved","onHandleRemoveAllFromRemoved","Content","handleAddNewTask","newTaskState","newTask","uuid","handleRemoveFromTasks","filter","handleMoveFromTasksToDone","index","findIndex","removedTaskWithDoneAt","splice","handleStoreToRemoved","removedTask","handleRemoveTaskFromDone","handleRemoveTaskFromRemoved","handleRemoveAllFromRemoved","path","render","component","Footer","App","basename","process","ReactDOM","document","getElementById"],"mappings":"qOAmCeA,EAhCA,WACb,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,qBAEb,yBAAKA,UAAU,qBACb,uBAAGA,UAAU,mBAAb,YACA,kBAAC,IAAD,CAASC,GAAG,SAASD,UAAU,eAA/B,UAGF,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,cACZ,4BACE,kBAAC,IAAD,CAASE,OAAK,EAACF,UAAU,YAAYC,GAAG,KAAxC,aAEF,4BACE,kBAAC,IAAD,CAASD,UAAU,YAAYC,GAAG,SAAlC,UAEF,4BACE,kBAAC,IAAD,CAASD,UAAU,YAAYC,GAAG,SAAlC,SAEF,4BACE,kBAAC,IAAD,CAASD,UAAU,YAAYC,GAAG,YAAlC,iB,+ECtBRE,GAAU,IAAIC,MAAOC,cAAcC,OAAO,EAAG,IAC7CC,GAAU,IAAIH,MAAOI,cAAgB,EAAI,SAqGhCC,E,2MAlGbC,MAAQ,CACNC,KAAM,GACNC,UAAU,EACVC,KAAMV,G,EAORW,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZL,KAAMI,EAAEE,OAAOC,S,EAInBC,qBAAuB,WACrB,EAAKH,UAAS,SAAAI,GAAS,MAAK,CAC1BR,UAAWQ,EAAUR,c,EAIzBS,iBAAmB,SAACN,GAClB,EAAKC,SAAS,CACZH,KAAME,EAAEE,OAAOC,S,EAInBI,aAAe,SAACP,GACdA,EAAEQ,iBAE6B,IAA3B,EAAKb,MAAMC,KAAKa,OAKW,IAA3B,EAAKd,MAAMG,KAAKW,QAKpB,EAAKC,MAAMC,mBAAmB,EAAKhB,OAEnC,EAAKM,SAAS,CACZL,KAAM,GACNC,UAAU,EACVC,KAAMV,IAGRwB,MAAM,2BAZJA,MAAM,2BALNA,MAAM,8B,wEAqBA,IAAD,EAC0BC,KAAKlB,MAA9BC,EADD,EACCA,KAAMC,EADP,EACOA,SAAUC,EADjB,EACiBA,KAExB,OACE,yBAAKb,UAAU,YACb,wBAAIA,UAAU,oBAAd,YAEA,0BAAM6B,SAAUD,KAAKN,aAActB,UAAU,uBAC3C,2BAAO8B,QAAQ,OAAO9B,UAAU,eAAhC,QACA,2BACE+B,UAAU,MACVC,KAAK,OACLC,KAAK,OACLjC,UAAU,cACVkB,MAAOP,EACPuB,SAAUN,KAAKd,mBAGjB,2BAAOgB,QAAQ,WAAW9B,UAAU,eAApC,YACA,2BACEgC,KAAK,WACLC,KAAK,WACLjC,UAAU,iBACVmC,QAASvB,EACTsB,SAAUN,KAAKT,uBAGjB,2BAAOW,QAAQ,WAAW9B,UAAU,eAApC,YACA,2BACEgC,KAAK,OACLC,KAAK,WACLjC,UAAU,eACVoC,IAAKjC,EACLkC,IAAK9B,EACLW,MAAOL,EACPqB,SAAUN,KAAKP,mBAGjB,2BAAOW,KAAK,SAASd,MAAM,eAAelB,UAAU,uB,GA5FxCsC,IAAMC,WCYbC,EAhBD,WACZ,OACE,yBAAKxC,UAAU,SACb,wBAAIA,UAAU,oBAAd,cAGA,uBAAGA,UAAU,oBAAb,kBAGA,uBAAGA,UAAU,oBAAb,6BCDSyC,EARD,WACZ,OACE,yBAAKzC,UAAU,SACb,uBAAGA,UAAU,oBAAb,6BC6BS0C,EA/BE,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,GAAIC,EAAiD,EAAjDA,KAAMhC,EAA2C,EAA3CA,SAAUiC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAK1D,OACE,yBAAK/C,UAAU,eACb,uBAAGgD,MAAOpC,EANG,CACfqC,MAAO,OAK2B,GAAIjD,UAAU,sBAAsB4C,GACpE,uBAAG5C,UAAU,yBAAb,aAAgD6C,GAChD,4BACE7C,UAAU,MACVkD,QAAS,kBAAMH,EAAOJ,KAFxB,QAKA,4BACE3C,UAAU,MACVkD,QAAS,kBAAMJ,EAASH,KAF1B,YCSSQ,EAtBE,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,wBAAyBC,EAAkC,EAAlCA,4BACrD,OACE,yBAAKtD,UAAU,aACb,wBAAIA,UAAU,qBAAd,uBAAmDoD,EAAS5B,OAA5D,MAEC4B,EAASG,KAAI,SAAAX,GAAI,OAChB,kBAAC,EAAD,eACEY,IAAKZ,EAAKD,IACNC,EAFN,CAGEE,SAAUO,EACVN,OAAQO,UCuBHG,EAjCE,SAAC,GAAuD,IAArDd,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,SAAUa,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,QAASb,EAAe,EAAfA,SACvD,OACE,yBAAK9C,UAAU,eACb,uBAAGA,UAAU,sBACV4C,EADH,mBACyBC,EADzB,KAGA,uBAAG7C,UAAU,yBAAb,YACY0D,GAGZ,4BACE1D,UAAU,MACVkD,QAAS,kBAAMS,EAAQhB,KAFzB,SAKA,4BACE3C,UAAU,MACVkD,QAAS,kBAAMJ,EAASH,KAF1B,YCQSiB,EAvBE,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,uBAAwBC,EAAiC,EAAjCA,2BACnD,OACE,yBAAK/D,UAAU,aACb,wBAAIA,UAAU,qBAAd,sBAAkD6D,EAAQrC,OAA1D,MAECqC,EAAQN,KAAI,SAAAX,GAAI,OACf,kBAAC,EAAD,eACEY,IAAKZ,EAAKD,IACNC,EAFN,CAGEe,QAASG,EACThB,SAAUiB,UCULC,EArBK,SAAC,GAA4B,IAA1BrB,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,KAAME,EAAe,EAAfA,SAC/B,OACE,yBAAK9C,UAAU,kBACb,uBAAGA,UAAU,yBACV4C,GAGH,4BACE5C,UAAU,MACVkD,QAAS,kBAAMJ,EAASH,KAF1B,YCoBSsB,EA1BK,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,WAAYC,EAAkE,EAAlEA,8BAA+BC,EAAmC,EAAnCA,6BAChE,OACE,yBAAKpE,UAAU,gBACb,wBAAIA,UAAU,wBAAd,yBAAwDkE,EAAW1C,OAAnE,MACA,4BACExB,UAAU,MACVkD,QAASkB,GAFX,cAKCF,EAAWX,KAAI,SAAAX,GAAI,OAClB,kBAAC,EAAD,eACEY,IAAKZ,EAAKD,IACNC,EAFN,CAGEE,SAAUqB,U,6jBC8ILE,E,2MAnJb3D,MAAQ,CACN0C,SAAU,CACR,CAAET,GAAI,EAAGC,KAAM,cAAehC,UAAU,EAAOiC,SAAU,aAAca,OAAQ,MAC/E,CAAEf,GAAI,EAAGC,KAAM,gBAAiBhC,UAAU,EAAOiC,SAAU,aAAca,OAAQ,MACjF,CAAEf,GAAI,EAAGC,KAAM,aAAchC,UAAU,EAAMiC,SAAU,aAAca,OAAQ,MAC7E,CAAEf,GAAI,EAAGC,KAAM,gBAAiBhC,UAAU,EAAMiC,SAAU,aAAca,OAAQ,MAChF,CAAEf,GAAI,EAAGC,KAAM,iBAAkBhC,UAAU,EAAOiC,SAAU,aAAca,OAAQ,OAEpFG,QAAS,CACP,CAAElB,GAAI,EAAGC,KAAM,gBAAiBhC,UAAU,EAAOiC,SAAU,aAAca,OAAQ,yBACjF,CAAEf,GAAI,EAAGC,KAAM,oBAAqBhC,UAAU,EAAOiC,SAAU,aAAca,OAAQ,yBACrF,CAAEf,GAAI,EAAGC,KAAM,eAAgBhC,UAAU,EAAMiC,SAAU,aAAca,OAAQ,yBAC/E,CAAEf,GAAI,EAAGC,KAAM,iBAAkBhC,UAAU,EAAOiC,SAAU,aAAca,OAAQ,0BAEpFQ,WAAY,CACV,CAAEvB,GAAI,GAAIC,KAAM,aAAchC,UAAU,EAAMiC,SAAU,aAAca,OAAQ,yBAC9E,CAAEf,GAAI,GAAIC,KAAM,eAAgBhC,UAAU,EAAOiC,SAAU,aAAca,OAAQ,2B,EAIrFY,iBAAmB,SAACC,GAClB,IAAMC,EAAU,CACd7B,GAAI8B,MACJ7B,KAAM2B,EAAa5D,KACnBC,SAAU2D,EAAa3D,SACvBiC,SAAU0B,EAAa1D,KACvB6C,OAAQ,MAGJN,EAAQ,sBAAO,EAAK1C,MAAM0C,UAAlB,CAA4BoB,IAE1C,EAAKxD,SAAS,CACZoC,c,EAIJsB,sBAAwB,SAAC/B,GACvB,IAAIS,EAAQ,YAAO,EAAK1C,MAAM0C,UAE9BA,EAAWA,EAASuB,QAAO,SAAA/B,GAAI,OAAIA,EAAKD,KAAOA,KAE/C,EAAK3B,SAAS,CACZoC,c,EAIJwB,0BAA4B,SAACjC,GAC3B,IAAMS,EAAQ,YAAO,EAAK1C,MAAM0C,UAC1ByB,EAAQzB,EAAS0B,WAAU,SAAAlC,GAAI,OAAIA,EAAKD,KAAOA,KAGjDoC,EAAqB,KAFL3B,EAAS4B,OAAOH,EAAO,GAEE,IAC7CE,EAAsBrB,QAAS,IAAItD,MAAOC,cAAcC,OAAO,EAAG,IAAM,OAAQ,IAAIF,MAAOC,cAAcC,OAAO,GAAI,GAEpH,IAAMuD,EAAO,sBAAO,EAAKnD,MAAMmD,SAAlB,CAA2BkB,IAExC,EAAK/D,SAAS,CACZoC,WACAS,a,EAIJoB,qBAAuB,SAACtC,GACtB,IAAMkB,EAAO,YAAO,EAAKnD,MAAMmD,SACzBgB,EAAQhB,EAAQiB,WAAU,SAAAlC,GAAI,OAAIA,EAAKD,KAAOA,KAC9CuC,EAAcrB,EAAQmB,OAAOH,EAAO,GAEpCX,EAAU,sBAAO,EAAKxD,MAAMwD,YAAlB,MAAmCgB,EAAY,MAE/D,EAAKlE,SAAS,CACZ6C,UACAK,gB,EAIJiB,yBAA2B,SAACxC,GAC1B,IAAIkB,EAAO,YAAO,EAAKnD,MAAMmD,SAC7BA,EAAUA,EAAQc,QAAO,SAAA/B,GAAI,OAAIA,EAAKD,KAAOA,KAE7C,EAAK3B,SAAS,CACZ6C,a,EAIJuB,4BAA8B,SAACzC,GAC7B,IAAIuB,EAAU,YAAO,EAAKxD,MAAMwD,YAChCA,EAAaA,EAAWS,QAAO,SAAA/B,GAAI,OAAIA,EAAKD,KAAOA,KAEnD,EAAK3B,SAAS,CACZkD,gB,EAIJmB,2BAA6B,WAG3B,EAAKrE,SAAS,CACZkD,WAHiB,M,wEAOX,IAAD,SACmCtC,KAAKlB,MAAvC0C,EADD,EACCA,SAAUS,EADX,EACWA,QAASK,EADpB,EACoBA,WAC3B,OACE,0BAAMlE,UAAU,WAEd,yBAAKA,UAAU,sBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACoF,KAAK,IAAIC,OAAQ,kBAC3B,kBAAC,EAAD,CAAS7D,mBAAoB,EAAK4C,sBAGrC,kBAAC,IAAD,CAAOgB,KAAK,QAAQC,OAAQ,SAAC9D,GAAD,OACzB,kBAAC,EAAD,CACC2B,SAAUA,EACVC,wBAAyB,EAAKqB,sBAC9BpB,4BAA6B,EAAKsB,+BAItC,kBAAC,IAAD,CAAOU,KAAK,QAAQC,OAAQ,kBAC1B,kBAAC,EAAD,CACE1B,QAASA,EACTC,uBAAwB,EAAKmB,qBAC7BlB,2BAA4B,EAAKoB,8BAIrC,kBAAC,IAAD,CAAOG,KAAK,WAAWC,OAAQ,kBAC5B,kBAAC,EAAD,CACCrB,WAAYA,EACZC,8BAA+B,EAAKiB,4BACpChB,6BAA8B,EAAKiB,gCAIvC,kBAAC,IAAD,CAAOC,KAAK,SAASE,UAAWhD,IAChC,kBAAC,IAAD,CAAOgD,UAAW/C,W,GA1IRF,aCCPkD,EAVA,WACb,OACE,4BAAQzF,UAAU,UAChB,uBAAGA,UAAU,qBAAb,0CCaS0F,MAZf,WACE,OACE,kBAAC,IAAD,CAAeC,SAAUC,oBACvB,yBAAK5F,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,MCPR6F,IAASN,OAAO,kBAAC,EAAD,MAASO,SAASC,eAAe,W","file":"static/js/main.150cdce7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__container\">\r\n\r\n        <div className=\"header__left info\">\r\n          <p className=\"info__paragraph\">ToDo-App</p>\r\n          <NavLink to=\"/about\" className=\"info__about\">About</NavLink>\r\n        </div>\r\n\r\n        <nav className=\"header__right nav\">\r\n          <ul className=\"nav__items\">\r\n            <li>\r\n              <NavLink exact className=\"nav__item\" to=\"/\">New Task</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink className=\"nav__item\" to=\"/todo\">Tasks</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink className=\"nav__item\" to=\"/done\">Done</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink className=\"nav__item\" to=\"/removed\">Removed</NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst minDate = new Date().toISOString().substr(0, 10);\r\nconst maxDate = new Date().getFullYear() + 2 + '-12-31';\r\n\r\nclass NewTask extends React.Component {\r\n  state = {\r\n    text: '',\r\n    priority: false,\r\n    date: minDate,\r\n  }\r\n\r\n  static propTypes = {\r\n    onHandleAddNewTask: PropTypes.func.isRequired,\r\n  }\r\n\r\n  handleTextChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    })\r\n  }\r\n\r\n  handlePriorityChange = () => {\r\n    this.setState(prevState => ({\r\n      priority: !prevState.priority,\r\n    }))\r\n  }\r\n\r\n  handleDataChange = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.text.length === 0) {\r\n      alert('Insert some task to do...');\r\n      return;\r\n    }\r\n\r\n    if (this.state.date.length === 0) {\r\n      alert('Choose deadline date...');\r\n      return;\r\n    }\r\n\r\n    this.props.onHandleAddNewTask(this.state);\r\n\r\n    this.setState({\r\n      text: '',\r\n      priority: false,\r\n      date: minDate,\r\n    });\r\n\r\n    alert('Task has been added...');\r\n  }\r\n\r\n\r\n  render() {\r\n    const { text, priority, date } = this.state;\r\n\r\n    return (\r\n      <div className=\"new-task\">\r\n        <h1 className=\"new-task__header\">New task</h1>\r\n\r\n        <form onSubmit={this.handleSubmit} className=\"new-task__form form\">\r\n          <label htmlFor=\"task\" className=\"form__label\">Task</label>\r\n          <input\r\n            maxLength=\"100\"\r\n            type=\"text\"\r\n            name=\"task\"\r\n            className=\"form__input\"\r\n            value={text}\r\n            onChange={this.handleTextChange}\r\n          />\r\n\r\n          <label htmlFor=\"priority\" className=\"form__label\">Priority</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"priority\"\r\n            className=\"form__checkbox\"\r\n            checked={priority}\r\n            onChange={this.handlePriorityChange}\r\n          />\r\n\r\n          <label htmlFor=\"deadline\" className=\"form__label\">Deadline</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"deadline\"\r\n            className=\"form__number\"\r\n            min={minDate}\r\n            max={maxDate}\r\n            value={date}\r\n            onChange={this.handleDataChange}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"Add New Task\" className=\"form__submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewTask;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about\">\r\n      <h2 className=\"about__paragraph\">\r\n        ToDo - App\r\n      </h2>\r\n      <p className=\"about__paragraph\">\r\n        version: 1.0.0\r\n      </p>\r\n      <p className=\"about__paragraph\">\r\n        author: Dariusz Okonski\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className=\"error\">\r\n      <p className=\"error__paragraph\">Something went wrong...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskItem = ({ id, task, priority, deadline, onRemove, onDone }) => {\r\n  const redStyle = {\r\n    color: 'red'\r\n  }\r\n\r\n  return (\r\n    <div className=\"single-task\">\r\n      <p style={priority ? redStyle : {}} className=\"single-task__issue\">{task}</p>\r\n      <p className=\"single-task__deadline\">Deadline: {deadline}</p>\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => onDone(id)}\r\n      >Done</button>\r\n\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => onRemove(id)}\r\n      >Remove</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  task: PropTypes.string.isRequired,\r\n  priority: PropTypes.bool.isRequired,\r\n  deadline: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onDone: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskList = ({ tasksArr, onHandleRemoveFromTasks, onHandleMoveFromTasksToDone }) => {\r\n  return (\r\n    <div className=\"task-item\">\r\n      <h1 className=\"task-item__header\">{`Tasks To Do (${tasksArr.length})`}</h1>\r\n\r\n      {tasksArr.map(task =>\r\n        <TaskItem\r\n          key={task.id}\r\n          {...task}\r\n          onRemove={onHandleRemoveFromTasks}\r\n          onDone={onHandleMoveFromTasksToDone}\r\n        />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskList.propTypes = {\r\n  tasksArr: PropTypes.array.isRequired,\r\n  onHandleRemoveFromTasks: PropTypes.func.isRequired,\r\n  onHandleMoveFromTasksToDone: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst DoneItem = ({ id, task, deadline, doneAt, onStore, onRemove }) => {\r\n  return (\r\n    <div className=\"single-done\">\r\n      <p className=\"single-done__issue\">\r\n        {task} - (done till - {deadline})\r\n        </p>\r\n      <p className=\"single-done__deadline\">\r\n        Done at: {doneAt}\r\n      </p>\r\n\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => onStore(id)}\r\n      >Store</button>\r\n\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => onRemove(id)}\r\n      >Remove</button>\r\n    </div >\r\n  );\r\n}\r\n\r\nDoneItem.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  task: PropTypes.string.isRequired,\r\n  deadline: PropTypes.string.isRequired,\r\n  doneAt: PropTypes.string,\r\n  onStore: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default DoneItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DoneItem from './DoneItem';\r\n\r\nconst DoneList = ({ doneArr, onHandleStoreToRemoved, onHandleRemoveTaskFromDone }) => {\r\n  return (\r\n    <div className=\"done-item\">\r\n      <h1 className=\"done-item__header\">{`Done Tasks (${doneArr.length})`}</h1>\r\n\r\n      {doneArr.map(task =>\r\n        <DoneItem\r\n          key={task.id}\r\n          {...task}\r\n          onStore={onHandleStoreToRemoved}\r\n          onRemove={onHandleRemoveTaskFromDone}\r\n        />)}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nDoneList.propTypes = {\r\n  doneArr: PropTypes.array.isRequired,\r\n  onHandleStoreToRemoved: PropTypes.func.isRequired,\r\n  onHandleRemoveTaskFromDone: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default DoneList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RemovedItem = ({ id, task, onRemove }) => {\r\n  return (\r\n    <div className=\"single-removed\">\r\n      <p className=\"single-removed__issue\">\r\n        {task}\r\n      </p>\r\n\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => onRemove(id)}\r\n      >Remove</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nRemovedItem.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  task: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default RemovedItem;","import React from 'react';\r\nimport RemovedItem from './RemovedItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RemovedList = ({ removedArr, onHandleRemoveTaskFromRemoved, onHandleRemoveAllFromRemoved }) => {\r\n  return (\r\n    <div className=\"removed-item\">\r\n      <h1 className=\"removed-item__header\">{`Removed Tasks (${removedArr.length})`}</h1>\r\n      <button\r\n        className=\"btn\"\r\n        onClick={onHandleRemoveAllFromRemoved}\r\n      >Remove All</button>\r\n\r\n      {removedArr.map(task =>\r\n        <RemovedItem\r\n          key={task.id}\r\n          {...task}\r\n          onRemove={onHandleRemoveTaskFromRemoved}\r\n        />)}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nRemovedList.propTypes = {\r\n  removedArr: PropTypes.array.isRequired,\r\n  onHandleRemoveTaskFromRemoved: PropTypes.func.isRequired,\r\n  onHandleRemoveAllFromRemoved: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default RemovedList;","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport NewTask from './NewTask';\r\nimport About from './About';\r\nimport Error from './Error';\r\n\r\nimport TaskList from './Tasks/TaskList';\r\nimport DoneList from './Done/DoneList';\r\nimport RemovedList from './Removed/RemovedList';\r\n\r\nclass Content extends Component {\r\n  state = {\r\n    tasksArr: [\r\n      { id: 1, task: 'clean a car', priority: false, deadline: '18.02.2019', doneAt: null },\r\n      { id: 2, task: 'make shopping', priority: false, deadline: '14.03.2019', doneAt: null },\r\n      { id: 3, task: 'walk a dog', priority: true, deadline: '23.04.2019', doneAt: null },\r\n      { id: 4, task: 'go to a party', priority: true, deadline: '22.03.2019', doneAt: null },\r\n      { id: 5, task: 'go sleep early', priority: false, deadline: '13.12.2019', doneAt: null },\r\n    ],\r\n    doneArr: [\r\n      { id: 6, task: \"clean a house\", priority: false, deadline: \"18.02.2019\", doneAt: \"2019-09-19 - 21:57:52\" },\r\n      { id: 7, task: \"make big shopping\", priority: false, deadline: \"14.03.2019\", doneAt: \"2019-09-19 - 21:57:53\" },\r\n      { id: 8, task: \"make cookies\", priority: true, deadline: \"14.03.2019\", doneAt: \"2019-09-19 - 21:57:53\" },\r\n      { id: 9, task: \"prepare dinner\", priority: false, deadline: \"14.03.2019\", doneAt: \"2019-09-19 - 21:57:53\" },\r\n    ],\r\n    removedArr: [\r\n      { id: 10, task: \"walk a cat\", priority: true, deadline: \"14.03.2019\", doneAt: \"2019-09-19 - 21:57:53\" },\r\n      { id: 11, task: \"drink wather\", priority: false, deadline: \"14.03.2019\", doneAt: \"2019-09-19 - 21:57:53\" },\r\n    ],\r\n  }\r\n\r\n  handleAddNewTask = (newTaskState) => {\r\n    const newTask = {\r\n      id: uuid(),\r\n      task: newTaskState.text,\r\n      priority: newTaskState.priority,\r\n      deadline: newTaskState.date,\r\n      doneAt: null\r\n    }\r\n\r\n    const tasksArr = [...this.state.tasksArr, newTask];\r\n\r\n    this.setState({\r\n      tasksArr,\r\n    })\r\n  }\r\n\r\n  handleRemoveFromTasks = (id) => {\r\n    let tasksArr = [...this.state.tasksArr];\r\n\r\n    tasksArr = tasksArr.filter(task => task.id !== id);\r\n\r\n    this.setState({\r\n      tasksArr\r\n    })\r\n  }\r\n\r\n  handleMoveFromTasksToDone = (id) => {\r\n    const tasksArr = [...this.state.tasksArr];\r\n    const index = tasksArr.findIndex(task => task.id === id);\r\n    const removedTask = tasksArr.splice(index, 1);\r\n\r\n    let removedTaskWithDoneAt = { ...removedTask[0] };\r\n    removedTaskWithDoneAt.doneAt = new Date().toISOString().substr(0, 10) + ' - ' + new Date().toISOString().substr(11, 8);\r\n\r\n    const doneArr = [...this.state.doneArr, removedTaskWithDoneAt];\r\n\r\n    this.setState({\r\n      tasksArr,\r\n      doneArr,\r\n    })\r\n  }\r\n\r\n  handleStoreToRemoved = (id) => {\r\n    const doneArr = [...this.state.doneArr];\r\n    const index = doneArr.findIndex(task => task.id === id);\r\n    const removedTask = doneArr.splice(index, 1);\r\n\r\n    const removedArr = [...this.state.removedArr, { ...removedTask[0] }];\r\n\r\n    this.setState({\r\n      doneArr,\r\n      removedArr\r\n    })\r\n  }\r\n\r\n  handleRemoveTaskFromDone = (id) => {\r\n    let doneArr = [...this.state.doneArr];\r\n    doneArr = doneArr.filter(task => task.id !== id);\r\n\r\n    this.setState({\r\n      doneArr,\r\n    })\r\n  }\r\n\r\n  handleRemoveTaskFromRemoved = (id) => {\r\n    let removedArr = [...this.state.removedArr];\r\n    removedArr = removedArr.filter(task => task.id !== id);\r\n\r\n    this.setState({\r\n      removedArr\r\n    })\r\n  }\r\n\r\n  handleRemoveAllFromRemoved = () => {\r\n    const removedArr = [];\r\n\r\n    this.setState({\r\n      removedArr\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { tasksArr, doneArr, removedArr } = this.state;\r\n    return (\r\n      <main className=\"content\">\r\n\r\n        <div className=\"content__container\">\r\n          <Switch>\r\n            <Route exact path='/' render={() =>\r\n              (<NewTask onHandleAddNewTask={this.handleAddNewTask} />)}\r\n            />\r\n\r\n            <Route path='/todo' render={(props) =>\r\n              (<TaskList\r\n                tasksArr={tasksArr}\r\n                onHandleRemoveFromTasks={this.handleRemoveFromTasks}\r\n                onHandleMoveFromTasksToDone={this.handleMoveFromTasksToDone}\r\n              />)}\r\n            />\r\n\r\n            <Route path='/done' render={() => (\r\n              <DoneList\r\n                doneArr={doneArr}\r\n                onHandleStoreToRemoved={this.handleStoreToRemoved}\r\n                onHandleRemoveTaskFromDone={this.handleRemoveTaskFromDone}\r\n              />)}\r\n            />\r\n\r\n            <Route path='/removed' render={() =>\r\n              (<RemovedList\r\n                removedArr={removedArr}\r\n                onHandleRemoveTaskFromRemoved={this.handleRemoveTaskFromRemoved}\r\n                onHandleRemoveAllFromRemoved={this.handleRemoveAllFromRemoved}\r\n              />)}\r\n            />\r\n\r\n            <Route path='/about' component={About} />\r\n            <Route component={Error} />\r\n          </Switch>\r\n        </div>\r\n\r\n      </main>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__paragraph\">\r\n        ToDo - App &#169; 2019 Dariusz Okonski\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './Header';\nimport Content from './Content';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"app\">\n        <Header />\n        <Content />\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/main.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}